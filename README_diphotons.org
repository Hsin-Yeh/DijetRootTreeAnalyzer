#+TITLE: README_diphotons
#+Author: Andreas
#+Description: Starting from dijet analysis

* ADD Signals
*** Norm

#+begin_src bash

cd /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/CMSDIJET/DijetRootTreeAnalyzer/
cmsenv
mkdir -p output/plots

#RS
for year in {2017,2018}; do echo $year; for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; files_RS=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_${coup}*${year}*.root`; python python/AddSignalShapes.py -t nom -d output -c EBEB ${files_RS}; python python/AddSignalShapes.py -t nom -d output -c EBEE ${files_RS}; done; done;

#GluGlu
for year in {2017,2018}; do echo $year; for coup in {"0p014","1p4","5p6"}; do echo $coup; files_GluGlu=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_${coup}*${year}*.root`; python python/AddSignalShapes.py -t nom -d output -c EBEB ${files_GluGlu}; python python/AddSignalShapes.py -t nom -d output -c EBEE ${files_GluGlu}; done; done;

#+end_src

*** Systematics
"energyScaleStatUp","energyScaleSystUp","energyScaleGainUp","energySigmaUp",
"energyScaleStatDown","energyScaleSystDown","energyScaleGainDown","energySigmaDown"

#+begin_src bash

#RS
for year in {2017,2018}; do echo $year; for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; files_RS=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_${coup}*${year}*.root`; for syst in {"energyScaleStatUp","energyScaleSystUp","energyScaleGainUp","energySigmaUp","energyScaleStatDown","energyScaleSystDown","energyScaleGainDown","energySigmaDown"}; do echo ${syst}; python python/AddSignalShapes.py -t systematics -s ${syst} -d output -c EBEB ${files_RS}; python python/AddSignalShapes.py -t systematics -s ${syst} -d output -c EBEE ${files_RS}; done; done; done;

#GluGlu
for year in {2017,2018}; do echo $year; for coup in {"0p014","1p4","5p6"}; do echo $coup; files_GluGlu=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_${coup}*${year}*.root`;for syst in {"energyScaleStatUp","energyScaleSystUp","energyScaleGainUp","energySigmaUp","energyScaleStatDown","energyScaleSystDown","energyScaleGainDown","energySigmaDown"}; do echo ${syst}; python python/AddSignalShapes.py -t systematics -s ${syst} -d output -c EBEB ${files_GluGlu}; python python/AddSignalShapes.py -t systematics -s ${syst} -d output -c EBEE ${files_GluGlu}; done; done; done;

#Data
for year in {2017,2018}; do echo $year; python python/AddDataSamples.py -t nom -d output -c EBEB /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/data_${year}.root; python python/AddDataSamples.py -t nom -d output -c EBEE /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/data_${year}.root; done;

#+end_src

*** Split files FIXME
I CANNOT MAKE WORK THE ONE FILE TO HAVE THEM ALL BECAUSE
LATER I WANT TO SPLIT INTO FILES.

#+begin_src bash

#RS and GluGlu
files_RS_001_2017=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_kMpl001*2017*.root`;
files_RS_01_2017=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_kMpl01*2017*.root`;
files_RS_01_2017=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_kMpl02*2017*.root`;
files_RS_001_2018=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_kMpl001*2018*.root`;
files_RS_01_2018=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_ kMpl01*2018*.root`;
files_RS_01_2018=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_kMpl02*2018*.root`;

files_GluGlu_0p014_2017=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_0p014*2017*.root`
files_GluGlu_1p4_2017=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_1p4*2017*.root`
files_GluGlu_5p6_2017=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_5p6*2017*.root`
files_GluGlu_0p014_2018=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_0p014*2018*.root`
files_GluGlu_1p4_2018=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_1p4*2018*.root`
files_GluGlu_5p6_2018=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_5p6*2018*.root`


python python/AddSignalShapes.py -t nom -d output ${files_RS_001_2017} ${files_RS_01_2017} ${files_RS_02_2017} ${files_RS_001_2018} ${files_RS_01_2018} ${files_RS_02_2018} ${files_GluGlu_0p014_2017} ${files_GluGlu_1p4_2017} ${files_GluGlu_5p6_2017} ${files_GluGlu_0p014_2018} ${files_GluGlu_1p4_2018} ${files_GluGlu_5p6_2018}

#+end_src



#=======================================================
#RS
for year in {2017,2018}; do echo $year; for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; files_RS=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_${coup}*${year}*.root`; python python/AddSignalShapes.py -t nom -d output -c EBEB ${files_RS}; python python/AddSignalShapes.py -t nom -d output -c EBEE ${files_RS}; done; done;

#=======================================================
#GluGlu
for year in {2017,2018}; do echo $year; for coup in {"0p014","1p4","5p6"}; do echo $coup; files_GluGlu=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_${coup}*${year}*.root`; python python/AddSignalShapes.py -t nom -d output -c EBEB ${files_GluGlu}; python python/AddSignalShapes.py -t nom -d output -c EBEE ${files_GluGlu}; done; done;

#=======================================================
#=======================================================
#Systematics 
"energyScaleStatUp","energyScaleSystUp","energyScaleGainUp","energySigmaUp",
"energyScaleStatDown","energyScaleSystDown","energyScaleGainDown","energySigmaDown" 

#RS
for year in {2017,2018}; do echo $year; for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; files_RS=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_${coup}*${year}*.root`; for syst in {"energyScaleStatUp","energyScaleSystUp","energyScaleGainUp","energySigmaUp","energyScaleStatDown","energyScaleSystDown","energyScaleGainDown","energySigmaDown"}; do echo ${syst}; python python/AddSignalShapes.py -t systematics -s ${syst} -d output -c EBEB ${files_RS}; python python/AddSignalShapes.py -t systematics -s ${syst} -d output -c EBEE ${files_RS}; done; done; done;

#GluGlu
for year in {2017,2018}; do echo $year; for coup in {"0p014","1p4","5p6"}; do echo $coup; files_GluGlu=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_${coup}*${year}*.root`;for syst in {"energyScaleStatUp","energyScaleSystUp","energyScaleGainUp","energySigmaUp","energyScaleStatDown","energyScaleSystDown","energyScaleGainDown","energySigmaDown"}; do echo ${syst}; python python/AddSignalShapes.py -t systematics -s ${syst} -d output -c EBEB ${files_GluGlu}; python python/AddSignalShapes.py -t systematics -s ${syst} -d output -c EBEE ${files_GluGlu}; done; done; done;

#=======================================================
#=======================================================
#For data
for year in {2017,2018}; do echo $year; python python/AddDataSamples.py -t nom -d output -c EBEB /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/data_${year}.root; python python/AddDataSamples.py -t nom -d output -c EBEE /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/data_${year}.root; done;

#=======================================================

* Save Normalization <<<--- DON'T USE THAT NO MORE.
#=======================================================
The signal samples trees and the initial histos that are input to the interpolation package are 
normalized to 1000/pb luminosity.

Then, the interpolation code outputs histograms normalized to unity. So, to get the correct
normalization we save the initial integral of the histos

Remember that in the preparation of the trees we have 
                #used the weightAll cut to normalize the signal samples to 1000/pb luminosity.


#Be CAREFUL: We will append so remove the file first!
rm SignalNorm.txt
#=======================================================
#RS
for year in {2017,2018}; do echo $year; for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; files_RS=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_${coup}*${year}*.root`; python python/SaveSignalNormalization.py -t nom -d output --year ${year} ${files_RS}; done; done;

#=======================================================
#GluGlu
for year in {2017,2018}; do echo $year; for coup in {"0p014","1p4","5p6"}; do echo $coup; files_GluGlu=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_${coup}*${year}*.root`; python python/SaveSignalNormalization.py -t nom -d output --year ${year} ${files_GluGlu}; done; done;

* Extract shapes

#+begin_src bash

cd /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator

rm -rf inputs *.root
mkdir inputs

filesToExtractRS=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/output |grep .root | grep RSG`

for file in ${filesToExtractRS}; do echo ${file}; cp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/output/${file} .; filename=`echo ${file} | cut -d'.' -f 1`; rm -rf inputs/${filename}.py; ./extractShapes.py -i ${file} > inputs/${filename}.py; done;

filesToExtractGluGlu=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/output |grep .root | grep GluGlu`

for file in ${filesToExtractGluGlu}; do echo ${file}; cp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/output/${file} .; filename=`echo ${file} | cut -d'.' -f 1`; rm -rf inputs/${filename}.py; ./extractShapes.py -i ${file} > inputs/${filename}.py; done;

#+end_src

* Get Resonance shapes

#+begin_src bash

cd /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator

filesToExtractRS=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/output |grep .root | grep RSG`

filesToExtractGluGlu=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/output |grep .root | grep GluGlu`

for file in ${filesToExtractRS};
do echo ${file}; coup=`echo ${file} | cut -d'_' -f 3`; echo $coup; filename=`echo ${file} | cut -d'.' -f 1`; ./getResonanceShapes.py -i inputs/${filename}.py -c ${coup} -f gg --massrange 500 10000 100 -o ResonanceShapes_${filename}.root; done;

for file in ${filesToExtractGluGlu};
do echo ${file}; coup=`echo ${file} | cut -d'_' -f 4`; echo $coup; filename=`echo ${file} | cut -d'.' -f 1`; ./getResonanceShapes.py -i inputs/${filename}.py -c ${coup} -f gg --massrange 500 10000 100 -o ResonanceShapes_${filename}.root; done;

#Below an example when debugging
#./getResonanceShapes.py -i inputs/InputShapes_GluGluSpin0ToGammaGamma_W_1p4_EBEB_2017.py -c kMpl001 -f gg --massrange 500 10000 100 -o ResonanceShapes_GluGluSpin0ToGammaGamma_W_1p4_EBEB_2017.root

#+end_src

* Compare shapes - Closure Test - single plot comparison

#+begin_src bash

cd /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/
cmsenv
mkdir output/plots

#=======================================================
#RS
for year in {2017,2018}; do echo $year; for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; files_RS=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_${coup}*${year}*.root`; python python/CompareShapes.py -d output -c EBEB -w ${coup} ${files_RS}; python python/CompareShapes.py -d output -c EBEE -w ${coup} ${files_RS}; done; done;

#=======================================================
#GluGlu
for year in {2017,2018}; do echo $year; for coup in {"0p014","1p4","5p6"}; do echo $coup; files_GluGlu=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/GluGluSpin0ToGammaGamma_W_${coup}*${year}*.root`; python python/CompareShapes.py -d output -c EBEB -w ${coup} ${files_GluGlu}; python python/CompareShapes.py -d output -c EBEE -w ${coup} ${files_GluGlu}; done; done;


#Below an example when debugging
python python/CompareShapes.py -d output -c EBEB -w kMpl001 /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_kMpl01_M_1000_TuneCP2_13TeV_pythia8_2018.root

#+end_src


#=======================================================
* Compare shapes - Closure Test - multi plot comparison

#+begin_src bash

cd /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/
cmsenv

#Will plot 1 TeV, 2 TeV, 3 TeV, 4 TeV, 5 TeV.
for year in {2017,2018}; do echo $year; for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup;
files_Selection_RS=`ls /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/input/trees/RSGravitonToGammaGamma_${coup}*${year}*.root`; python python/CompareShapes.py -d output -c EBEB -m -w ${coup} ${files_Selection}; python python/CompareShapes.py -d output -c EBEE -m -w ${coup} ${files_Selection};
done; done;

#+end_src

* Background model TODO
#+begin_src bash

#+end_src
You should create the config file. For the number of bins do :

python python/BinningDiPhotons.py -m 500

#below is for equal width bins. 
#seq 500 5 6000 > tt
#sed ':a;N;$!ba;s/\n/,/g' tt

#BLIND with adding --plot-region Low 
#kMpl001
python python/BinnedFit.py -c config/diphotons.config -l 41527 -b DiPhotons_kMpl001_EBEB -d test_directory --fit-spectrum --plot-region Low --coup kMpl001 --cat EBEB --year 2017 output/InputShapes_data_EBEB_2017.root

python python/BinnedFit.py -c config/diphotons_kMpl001.config -l 41527 -b DiPhotons -d test_directory --fit-spectrum --coup kMpl001 --cat EBEE --year 2017 output/InputShapes_data_EBEE_2017.root

#kMpl01
python python/BinnedFit.py -c config/diphotons_kMpl01.config -l 41527 -b DiPhotons -d test_directory --fit-spectrum --coup kMpl01 --cat EBEB --year 2017 output/InputShapes_data_EBEB_2017.root

python python/BinnedFit.py -c config/diphotons_kMpl01.config -l 41527 -b DiPhotons -d test_directory --fit-spectrum --coup kMpl01 --cat EBEE --year 2017 output/InputShapes_data_EBEE_2017.root

#kMpl02
python python/BinnedFit.py -c config/diphotons_kMpl02.config -l 41527 -b DiPhotons -d test_directory --fit-spectrum --coup kMpl02 --cat EBEB --year 2017 output/InputShapes_data_EBEB_2017.root

python python/BinnedFit.py -c config/diphotons_kMpl02.config -l 41527 -b DiPhotons -d test_directory --fit-spectrum --coup kMpl02 --cat EBEE --year 2017 output/InputShapes_data_EBEE_2017.root

# NOMINAL MODEL: dijet

#All at once
#2016 Lumi 35900 
for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFit.py -c config/diphotons_dijet.config -l 35900 -b DiPhotons_${coup}_${cat} -d test_directory --fit-spectrum --plot-region Low --coup $coup --cat $cat --year 2016 output/InputShapes_data_${cat}_2016.root; done; done;

#2017 Lumi 41527 
for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFit.py -c config/diphotons_dijet.config -l 41527 -b DiPhotons_${coup}_${cat} -d test_directory --fit-spectrum --plot-region Low --coup $coup --cat $cat --year 2017 output/InputShapes_data_${cat}_2017.root; done; done;

#2018 Lumi 59670 
for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFit.py -c config/diphotons_dijet.config -l 59670 -b DiPhotons_${coup}_${cat} -d test_directory --fit-spectrum --plot-region Low --coup $coup --cat $cat --year 2018 output/InputShapes_data_${cat}_2018.root; done; done;

#-------------------------------------------------------
Plot all models together - Not all couplings needed but OK run on all. 

mkdir -p AllBkgModels/blind

#BLIND with adding --plot-region Low 
#2016 Lumi 35900 
for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFitForPlottingMulti.py -c config/diphotons_multiplot.config -l 35900 -b DiPhotons_${coup}_${cat} -d AllBkgModels/blind --fit-spectrum --plot-region Low --coup $coup --cat $cat --year 2016 output/InputShapes_data_${cat}_2016.root; done; done;

#2017 Lumi 41527 
for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFitForPlottingMulti.py -c config/diphotons_multiplot.config -l 41527 -b DiPhotons_${coup}_${cat} -d AllBkgModels/blind --fit-spectrum --plot-region Low --coup $coup --cat $cat --year 2017 output/InputShapes_data_${cat}_2017.root; done; done;

#2018 Lumi 59670 
for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFitForPlottingMulti.py -c config/diphotons_multiplot.config -l 59670 -b DiPhotons_${coup}_${cat} -d AllBkgModels/blind --fit-spectrum --plot-region Low --coup $coup --cat $cat --year 2018 output/InputShapes_data_${cat}_2018.root; done; done;

mkdir -p AllBkgModels/unblind
#UNBLIND removing --plot-region Low 
#2016 Lumi 35900 
for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFitForPlottingMulti.py -c config/diphotons_multiplot.config -l 35900 -b DiPhotons_${coup}_${cat} -d AllBkgModels/unblind --fit-spectrum --coup $coup --cat $cat --year 2016 output/InputShapes_data_${cat}_2016.root; done; done;

#2017 Lumi 41527 
for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFitForPlottingMulti.py -c config/diphotons_multiplot.config -l 41527 -b DiPhotons_${coup}_${cat} -d AllBkgModels/unblind --fit-spectrum --coup $coup --cat $cat --year 2017 output/InputShapes_data_${cat}_2017.root; done; done;

#2018 Lumi 59670 
for coup in {"kMpl001","kMpl01","kMpl02"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFitForPlottingMulti.py -c config/diphotons_multiplot.config -l 59670 -b DiPhotons_${coup}_${cat} -d AllBkgModels/unblind --fit-spectrum --coup $coup --cat $cat --year 2018 output/InputShapes_data_${cat}_2018.root; done; done;

#----------------------
#Test command
#kMpl001
python python/BinnedFitForPlottingMulti.py -c config/diphotons_multiplot.config -l 41527 -b DiPhotons_kMpl001_EBEB -d test_directory --fit-spectrum --plot-region Low --coup kMpl001 --cat EBEB --year 2017 output/InputShapes_data_EBEB_2017.root
#----------------------


#=======================================================
* Create the datacard
#=======================================================

IMPORTANT COMMENTS: 

1. The normalization is done through the file: 

/afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis/SignalNorm.txt

which is created from the signalNorm.cc code based on efficiency x acceptance!

2. The -i option needs the results from the bkg only fit which I am putting in 
bkgAltModels/dijet/blind/FitResults_${box}_YEAR.root

#2016 
# Remember for me the yield was initially normalized to 1000/pb. So, here lumi 35900 (-d test_directory/2016/${box} omitted and moved 
# due to combine issues adding channels)
for mass in `seq 500 100 6000`; do for box in {"DiPhotons_kMpl001_EBEB","DiPhotons_kMpl001_EBEE","DiPhotons_kMpl01_EBEB","DiPhotons_kMpl01_EBEE","DiPhotons_kMpl02_EBEB","DiPhotons_kMpl02_EBEE"}; do echo ${box}; cat=`echo ${box}| cut -d"_" -f 3`; coup=`echo ${box}| cut -d"_" -f 2`; mkdir -p test_directory/2016/${box}; python python/WriteDataCard.py -m gg --mass ${mass} output/InputShapes_data_${cat}_2016.root -i bkgAltModels/dijet/blind/FitResults_${box}_2016.root --lumi 35.9 -c config/diphotons.config -b ${box} --year 2016 --eneScStatUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2016_energyScaleStatUp.root --eneScStatDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2016_energyScaleStatDown.root --eneScSystUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2016_energyScaleSystUp.root --eneScSystDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2016_energyScaleSystDown.root --eneScGainUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2016_energyScaleGainUp.root --eneScGainDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2016_energyScaleGainDown.root --eneScSigmaUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2016_energySigmaUp.root --eneScSigmaDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2016_energySigmaDown.root /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2016.root; mv diphoton_combine_${mass}_${box}_2016.* test_directory/2016/${box}/.; done; done;

#2017 
# Remember for me the yield was initially normalized to 1000/pb. So, here lumi 41.527 (-d test_directory/2017/${box} omitted)
for mass in `seq 500 100 6000`; do for box in {"DiPhotons_kMpl001_EBEB","DiPhotons_kMpl001_EBEE","DiPhotons_kMpl01_EBEB","DiPhotons_kMpl01_EBEE","DiPhotons_kMpl02_EBEB","DiPhotons_kMpl02_EBEE"}; do echo ${box}; cat=`echo ${box}| cut -d"_" -f 3`; coup=`echo ${box}| cut -d"_" -f 2`; mkdir -p test_directory/2017/${box}; python python/WriteDataCard.py -m gg --mass ${mass} output/InputShapes_data_${cat}_2017.root -i bkgAltModels/dijet/blind/FitResults_${box}_2017.root --lumi 41.527 -c config/diphotons.config -b ${box} --year 2017 --eneScStatUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2017_energyScaleStatUp.root --eneScStatDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2017_energyScaleStatDown.root --eneScSystUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2017_energyScaleSystUp.root --eneScSystDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2017_energyScaleSystDown.root --eneScGainUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2017_energyScaleGainUp.root --eneScGainDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2017_energyScaleGainDown.root --eneScSigmaUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2017_energySigmaUp.root --eneScSigmaDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2017_energySigmaDown.root /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2017.root; mv diphoton_combine_${mass}_${box}_2017.* test_directory/2017/${box}/.; done; done;

#2018 
# Remember for me the yield was initially normalized to 1000/pb. So, here lumi 59.670 (-d test_directory/2018/${box} omitted)
for mass in `seq 500 100 6000`; do for box in {"DiPhotons_kMpl001_EBEB","DiPhotons_kMpl001_EBEE","DiPhotons_kMpl01_EBEB","DiPhotons_kMpl01_EBEE","DiPhotons_kMpl02_EBEB","DiPhotons_kMpl02_EBEE"}; do echo ${box}; cat=`echo ${box}| cut -d"_" -f 3`; coup=`echo ${box}| cut -d"_" -f 2`; mkdir -p test_directory/2018/${box}; python python/WriteDataCard.py -m gg --mass ${mass} output/InputShapes_data_${cat}_2018.root -i bkgAltModels/dijet/blind/FitResults_${box}_2018.root --lumi 59.670 -c config/diphotons.config -b ${box} --year 2018 --eneScStatUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2018_energyScaleStatUp.root --eneScStatDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2018_energyScaleStatDown.root --eneScSystUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2018_energyScaleSystUp.root --eneScSystDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2018_energyScaleSystDown.root --eneScGainUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2018_energyScaleGainUp.root --eneScGainDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2018_energyScaleGainDown.root --eneScSigmaUp /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2018_energySigmaUp.root --eneScSigmaDown /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2018_energySigmaDown.root /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_${coup}_${cat}_2018.root; mv diphoton_combine_${mass}_${box}_2018.* test_directory/2018/${box}/. ;done; done;

#combine years and channels
themainpath="/afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/test_directory"

cd ${themainpath}/
mkdir fullRun2
cd fullRun2

for scenario in {"DiPhotons_kMpl001","DiPhotons_kMpl01","DiPhotons_kMpl02"}; do echo ${scenario}; for mass in `seq 500 100 6000`; do echo ${mass}; combineCards.py ${themainpath}/2016/${scenario}_EBEB/diphoton_combine_${mass}_${scenario}_EBEB_2016.txt ${themainpath}/2016/${scenario}_EBEE/diphoton_combine_${mass}_${scenario}_EBEE_2016.txt ${themainpath}/2017/${scenario}_EBEB/diphoton_combine_${mass}_${scenario}_EBEB_2017.txt ${themainpath}/2017/${scenario}_EBEE/diphoton_combine_${mass}_${scenario}_EBEE_2017.txt ${themainpath}/2018/${scenario}_EBEB/diphoton_combine_${mass}_${scenario}_EBEB_2018.txt ${themainpath}/2018/${scenario}_EBEE/diphoton_combine_${mass}_${scenario}_EBEE_2018.txt > diphoton_combine_${mass}_${scenario}.txt; done; done; 


The datacard should be in fullRun2 directory, one for each coupling scenario. 

Single mass point cat coupling example
python python/WriteDataCard.py \
-m gg \
--mass 1000 \
output/InputShapes_data_EBEB_2017.root \
-i test_directory/FitResults_DiPhotons_kMpl001_EBEB_2017.root \
--lumi 41527 \
-c config/diphotons.config \
-b DiPhotons_kMpl001_EBEB \
-d test_directory \
--year 2017 \
/afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/DijetShapeInterpolator/ResonanceShapes_InputShapes_RSGravitonToGammaGamma_kMpl001_EBEB_2017.root

#=======================================================
* Bias
#=======================================================

We will first need to define the alternative background models. 
Functions that work are: 

{"dijet","expow1","invpow1","invpowlin1"}

#------
#BLIND
#------

#2016 Lumi 35900  {"dijet","expow1","invpow1","invpowlin1"}
for bkgmodel in {"dijet","expow1","invpow1","invpowlin1"}; do echo ${bkgmodel}; mkdir -p bkgAltModels/${bkgmodel}/blind; for coup in {"kMpl001","kMpl01","kMpl02","0p014","1p4","5p6"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFit.py -c config/diphotons_${bkgmodel}.config -l 35900 -b DiPhotons_${coup}_${cat} -d bkgAltModels/${bkgmodel}/blind --fit-spectrum --plot-region Low --coup $coup --cat $cat --year 2016 output/InputShapes_data_${cat}_2016.root; done; done; done;

#2017 Lumi 41527 {"dijet","expow1","invpow1","invpowlin1"}
for bkgmodel in {"dijet","expow1","invpow1","invpowlin1"}; do echo ${bkgmodel}; mkdir -p bkgAltModels/${bkgmodel}/blind; for coup in {"kMpl001","kMpl01","kMpl02","0p014","1p4","5p6"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFit.py -c config/diphotons_${bkgmodel}.config -l 41527 -b DiPhotons_${coup}_${cat} -d bkgAltModels/${bkgmodel}/blind --fit-spectrum --plot-region Low --coup $coup --cat $cat --year 2017 output/InputShapes_data_${cat}_2017.root; done; done; done;

#2018 Lumi 59670 
for bkgmodel in {"dijet","expow1","invpow1","invpowlin1"}; do echo ${bkgmodel}; mkdir -p bkgAltModels/${bkgmodel}/blind; for coup in {"kMpl001","kMpl01","kMpl02","0p014","1p4","5p6"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFit.py -c config/diphotons_${bkgmodel}.config -l 59670 -b DiPhotons_${coup}_${cat} -d bkgAltModels/${bkgmodel}/blind --fit-spectrum --plot-region Low --coup $coup --cat $cat --year 2018 output/InputShapes_data_${cat}_2018.root; done; done; done;

#-------
#UNBLIND
#-------

#2016 Lumi 35900  
for bkgmodel in {"dijet","expow1","invpow1","invpowlin1"}; do echo ${bkgmodel}; mkdir -p bkgAltModels/${bkgmodel}/unblind; for coup in {"kMpl001","kMpl01","kMpl02","0p014","1p4","5p6"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFit.py -c config/diphotons_${bkgmodel}.config -l 35900 -b DiPhotons_${coup}_${cat} -d bkgAltModels/${bkgmodel}/unblind --fit-spectrum --coup $coup --cat $cat --year 2016 output/InputShapes_data_${cat}_2016.root; done; done; done;

#2017 Lumi 41527 
for bkgmodel in {"dijet","expow1","invpow1","invpowlin1"}; do echo ${bkgmodel}; mkdir -p bkgAltModels/${bkgmodel}/unblind; for coup in {"kMpl001","kMpl01","kMpl02","0p014","1p4","5p6"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFit.py -c config/diphotons_${bkgmodel}.config -l 41527 -b DiPhotons_${coup}_${cat} -d bkgAltModels/${bkgmodel}/unblind --fit-spectrum --coup $coup --cat $cat --year 2017 output/InputShapes_data_${cat}_2017.root; done; done; done;

#2018 Lumi 59670 
for bkgmodel in {"dijet","expow1","invpow1","invpowlin1"}; do echo ${bkgmodel}; mkdir -p bkgAltModels/${bkgmodel}/unblind; for coup in {"kMpl001","kMpl01","kMpl02","0p014","1p4","5p6"}; do echo $coup; for cat in {"EBEB","EBEE"}; do echo $cat; python python/BinnedFit.py -c config/diphotons_${bkgmodel}.config -l 59670 -b DiPhotons_${coup}_${cat} -d bkgAltModels/${bkgmodel}/unblind --fit-spectrum --coup $coup --cat $cat --year 2018 output/InputShapes_data_${cat}_2018.root; done; done; done;

#-----------

With the above results we should make the bias config files. To avoid mistakes we should read the results automatically. 

---->>>>> NOT NEEDED THE ONE BELOW!
for year in {2017,2018}; do echo "====================================================";echo ${year};for box in {"DiPhotons_kMpl001_EBEB","DiPhotons_kMpl001_EBEE","DiPhotons_kMpl01_EBEB","DiPhotons_kMpl01_EBEE","DiPhotons_kMpl02_EBEB","DiPhotons_kMpl02_EBEE","DiPhotons_0p014_EBEB","DiPhotons_0p014_EBEE","DiPhotons_1p4_EBEB","DiPhotons_1p4_EBEE","DiPhotons_5p6_EBEB","DiPhotons_5p6_EBEE"}; do echo "==================================";echo \#${box}; for bkgmodel in {"dijet","expow1","invpow1","invpowlin1"}; do echo \#${bkgmodel}; python python/PrintMultiPdfVars.py -b ${box} bkgAltModels/${bkgmodel}/blind/FitResults_${box}_${year}.root -m ${bkgmodel}; done; done; done;

You can now make the bias config file, one for each year. 
---->>>>> NOT NEEDED THE ONE ABOVE!

Run combine-based bias studies with 1000 toys for r = 1 and XX pb cross section using 4-parameter modified exponential for generation and 4-parameter dijet functi0n for fitting (defined in confif/dijet_bias.config)

mkdir signal_bias/

#expow1

time python python/RunBias.py -c config/diphotons_bias_2017.config -i bkgAltModels/expow1/blind/FitResults_DiPhotons_kMpl001_EBEB_2017.root -b DiPhotons_kMpl001_EBEB --mass 1000 -m gg -d signal_bias -r 1 -l 41.527 --year 2017 -t 10 --gen-pdf expow1 --fit-pdf dijet 



export mainpath="/afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/diphoton-analysis"

for year in 2016; do echo "combine_bias_study.exe ${year} "${mainpath}/output/${year}/combine_bias/finaloutput" "${mainpath}/output/${year}/combine_bias/plots" "; combine_bias_study.exe ${year} "${mainpath}/output/${year}/combine_bias/finaloutput" "${mainpath}/output/${year}/combine_bias/plots"; done;

for year in 2017; do echo "combine_bias_study.exe ${year} "${mainpath}/output/${year}/combine_bias/finaloutput" "${mainpath}/output/${year}/combine_bias/plots" "; combine_bias_study.exe ${year} "${mainpath}/output/${year}/combine_bias/finaloutput" "${mainpath}/output/${year}/combine_bias/plots"; done;

for year in 2018; do echo "combine_bias_study.exe ${year} "${mainpath}/output/${year}/combine_bias/finaloutput" "${mainpath}/output/${year}/combine_bias/plots" "; combine_bias_study.exe ${year} "${mainpath}/output/${year}/combine_bias/finaloutput" "${mainpath}/output/${year}/combine_bias/plots"; done;


#=======================================================
* Combine: checks, limits
#=======================================================


#make some structure
mkdir -p FinalResults/StandardChecks


combine -M FitDiagnostics -t -1 --expectSignal 0 /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/test_directory/diphoton_combine_1000_DiPhotons_kMpl001_2017.txt

combine -M FitDiagnostics -t -1 --expectSignal 1 /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/test_directory/diphoton_combine_1000_DiPhotons_kMpl001_2017.txt
------------------------------------
Yields 

We will perform a maximum likelihood fit to extract the signal/bkg yield. 

combine -M FitDiagnostics /afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/test_directory/diphoton_combine_1000_DiPhotons_kMpl001_2017.txt --saveNormalizations --saveShapes --saveWithUncertainties
python /afs/cern.ch/work/a/apsallid/CMS/Hgg/exodiphotons/seconditeration/CMSSW_10_2_13/src/HiggsAnalysis/CombinedLimit/test/mlfitNormsToText.py --uncertainties fitDiagnostics.root




#make some structure
mkdir -p FinalResults/Limits

#Then, run (will take some time depending on the mass points number)
#2017 RS
./loopAllMassPoints.csh 2017 grav kMpl001
./loopAllMassPoints.csh 2017 grav kMpl01
./loopAllMassPoints.csh 2017 grav kMpl02
#2018 RS
./loopAllMassPoints.csh 2018 grav kMpl001
./loopAllMassPoints.csh 2018 grav kMpl01
./loopAllMassPoints.csh 2018 grav kMpl02
#Full Run2 RS
./loopAllMassPoints.csh fullRun2 grav kMpl001
./loopAllMassPoints.csh fullRun2 grav kMpl01
./loopAllMassPoints.csh fullRun2 grav kMpl02

#To produce the plot run the command with the above output txt file as input :
export mainpath="/afs/cern.ch/work/h/hsinyeh/public/diphoton-analysis/CMSSW_10_2_13/src/CMSDIJET/DijetRootTreeAnalyzer/FinalResults"

mkdir Limits
cd ${mainpath}/Limits

# Full Run2 RS
plotLimit.exe "${mainpath}/combineJobs13TeV/fullRun2/grav/kMpl001/AsymptoticLimits/All/finalResults" kMpl001 fullRun2 "${mainpath}/Limits" grav

plotLimit.exe "${mainpath}/combineJobs13TeV/fullRun2/grav/kMpl01/AsymptoticLimits/All/finalResults" kMpl01 fullRun2 "${mainpath}/Limits" grav

plotLimit.exe "${mainpath}/combineJobs13TeV/fullRun2/grav/kMpl01/AsymptoticLimits/All/finalResults" kMpl02 fullRun2 "${mainpath}/Limits" grav


#2017 RS
plotLimit.exe "${mainpath}/combineJobs13TeV/2017/grav/kMpl001/AsymptoticLimits/All/finalResults" kMpl001 2017 "${mainpath}/FinalResults/Limits" grav

plotLimit.exe "${mainpath}/datacards/FinalResults/combineJobs13TeV/2017/grav/kMpl01/AsymptoticLimits/All/finalResults" kMpl01 2017 "${mainpath}/datacards/FinalResults/Limits" grav
plotLimit.exe "${mainpath}/datacards/FinalResults/combineJobs13TeV/2017/grav/kMpl02/AsymptoticLimits/All/finalResults" kMpl02 2017 "${mainpath}/datacards/FinalResults/Limits" grav


#For the observed and expected significance run the same script as above but open and edit as mentioned. 
#We do not wish to give this as an extra argument so that the user open and inspect the scripts. 
#So, go to `${mainpath}/datacards/FinalResults` and merge the output. We need `combineHarvester.py` and 
#`makeCombinePlots.py` from the Hgg group. 

#merge 
./combineHarvester.py --hadd combineJobs13TeV

#make dedicated directory to hold results for each method. e.g
mkdir ObsSignificance
cd ObsSignificance

#make plot
#2017 RS
../makeCombinePlots.py -m pval -f "${mainpath}/datacards/FinalResults/combineJobs13TeV/2017/grav/kMpl001/ObsSignificance/All/All.root" -c 1 -s 1 -w 2 -x 500,2900 -y 1e-4,1 -n Observed -t '41.527 fb^{-1} (13TeV)' -o pval13TeV_observed_kMpl001 -b --coupling kMpl001 
../makeCombinePlots.py -m pval -f "${mainpath}/datacards/FinalResults/combineJobs13TeV/2017/grav/kMpl01/ObsSignificance/All/All.root" -c 1 -s 1 -w 2 -x 500,2900 -y 1e-4,1 -n Observed -t '41.527 fb^{-1} (13TeV)' -o pval13TeV_observed_kMpl01 -b --coupling kMpl01 
../makeCombinePlots.py -m pval -f "${mainpath}/datacards/FinalResults/combineJobs13TeV/2017/grav/kMpl02/ObsSignificance/All/All.root" -c 1 -s 1 -w 2 -x 500,2900 -y 1e-4,1 -n Observed -t '41.527 fb^{-1} (13TeV)' -o pval13TeV_observed_kMpl02 -b --coupling kMpl02 



